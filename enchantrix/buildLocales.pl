#!/usr/bin/perl

open OUT, "> localization.lua";
print OUT << 'EOD';
--[[
	$Id$
	Version: <%version%>

	WARNING: This file is automatically generated from those in the
	locales directory. Do not edit it directly.

	You may find the source versions of this file at the
	project webpage, in the SVN repository.
	Please visit the homepage for more information.
		http://enchantrix.org/trac

	$Id$
	Version: <%version%>
	
	License:
		This program is free software; you can redistribute it and/or
		modify it under the terms of the GNU General Public License
		as published by the Free Software Foundation; either version 2
		of the License, or (at your option) any later version.

		This program is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.

		You should have received a copy of the GNU General Public License
		along with this program(see GLP.txt); if not, write to the Free Software
		Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
]]

EOD

for $i (1..5) { print OUT "\n"; }
for $i (1..6) {
	print OUT "-- ============= AUTOMATICALLY GENERATED FILE =============\n";
	print OUT "-- ================= DON'T EDIT THIS FILE =================\n\n";
}
for $i (1..5) { print OUT "\n"; }


for $file (<locales/????.utf8>) {
	$file =~ /locales.([^.]+).utf8/;
	$locale = $1;
	if ($locale ne "enUS") {
		push(@locales, $locale);
	}
	push(@valid, $locale);
}

print OUT "ENCH_VALID_LOCALES = {[\"".join("\"] = true, [\"", @valid)."\"] = true};\n\n";
print OUT "function Enchantrix_SetLocaleStrings(locale)\n";

print OUT "\t-- Default locale strings are defined in English\n";
open(DATA, "< locales/enUS.utf8");
while (<DATA>) {
	s/\xEF\xBB\xBF//;
	s/[\r\n]+/\n/g;
	s/([\200-\377])/sprintf("\\%d",ord($1))/eg;
	s/\-\-.*$//;
	if (/^(\w+)\s*=/) {
		$defined{$1} = 1;
	}
	if ($_ ne "") {
		print OUT "\t$_";
	}
}
close DATA;

print OUT "\n";

for $locale (@locales) {
	%localized = ();
	print OUT "\n\n\t-- Locale strings for the $locale locale\n";
	print OUT "\tif locale == \"$locale\" then\n";
	open(DATA, "< locales/$locale.utf8");
	while (<DATA>) {
		s/\xEF\xBB\xBF//;
		s/[\r\n]+/\n/g;
		s/([\200-\377])/sprintf("\\%d",ord($1))/eg;
		if (s/^(\w+)\s*=\s*/$1=/) {
			$localized{$1} = 1;
		}
		print OUT "\t\t$_";
	}
	close DATA;
	print OUT "\n";

	$missing = 0;
	for $defined (sort(keys(%defined))) {
		unless ($localized{$defined}) {
			unless ($missing) {
				print OUT "\n\t\t-- The following definitions are missing in this locale:\n";
				$missing = 1;
			}
			print OUT"\t\t--\t$defined = \"\";\n";
		}
	}
	
	print OUT "\n\tend\n\n";
}

print OUT "end\n\nEnchantrix_SetLocaleStrings(GetLocale());\n\n";
